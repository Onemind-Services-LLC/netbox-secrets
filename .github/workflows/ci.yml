name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v[0-9]+.[0-9]+.[0-9]+(-[a-zA-Z]+[0-9]+)?
  pull_request:
    types:
      - opened
      - synchronize

env:
  NETBOX_VERSION: v4.3.0
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '20'

jobs:
  pre_commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - uses: pre-commit/action@v3.0.1

  lint_frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Plugin Repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: 'netbox_secrets/project-static/yarn.lock'

      - name: Install Node.js dependencies
        run: yarn --cwd netbox_secrets/project-static install --frozen-lockfile

      - name: Check UI ESLint, TypeScript, and Prettier Compliance
        run: yarn --cwd netbox_secrets/project-static validate

      - name: Validate Static Asset Integrity
        run: bash .github/verify-bundles.sh

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [ pre_commit, lint_frontend ]

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: netbox
          POSTGRES_PASSWORD: netbox
          POSTGRES_DB: netbox
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Plugin Repository
        uses: actions/checkout@v4
        with:
          path: netbox_secrets

      - name: Checkout NetBox Repository
        uses: actions/checkout@v4
        with:
          repository: "netbox-community/netbox"
          path: netbox
          ref: ${{ env.NETBOX_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            netbox_secrets/setup.py
            netbox/requirements.txt

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libpq-dev

      - name: Install NetBox Core & Plugin Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ./netbox_secrets
          pip install -r ./netbox/requirements.txt

      - name: Configure NetBox
        working-directory: netbox
        run: |
          ln -sf $(pwd)/../netbox_secrets/testing_configuration/configuration.py netbox/netbox/configuration.py

      - name: Validate Database Migrations
        working-directory: netbox
        run: python netbox/manage.py makemigrations --check

      - name: Run Tests
        working-directory: netbox
        run: python netbox/manage.py test netbox_secrets.tests --parallel
